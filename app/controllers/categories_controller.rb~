class CategoriesController < ApplicationController
  before_action :set_category, only: [:show, :edit, :update, :destroy, :add]

  # GET /categories
  # GET /categories.json
  def index
    @categories = Category.all
  end

  # GET /categories/1
  # GET /categories/1.json
  def show
  end

  # GET /categories/new
  def new
    @category = Category.new
    @category.super_category = ""
    @category.sub_category = ""  
    @category.save
  end


  # GET /categories/1/edit
  def edit
  end
    
  # GET /categories/1/edit
  def add
    
   @old_category = @category
   @category = Category.new

   @category.super_category = @old_category.id.to_s

   @category.save if @category.title != nil
   if @old_category.sub_category != nil
	   	@old_category.sub_category += Category.last.id.to_s
	  	@old_category.sub_category += ","
   else
		@old_category.sub_category = Category.last.id.to_s
	  	@old_category.sub_category += ","
   end

   @old_category.save
   
   
  end

  # POST /categories
  # POST /categories.json
  def create
    @category = Category.new(category_params)

    respond_to do |format|
      if @category.save
        format.html { redirect_to '/categories', notice: 'Category was successfully created.' }
        format.json { render :show, status: :created, location: @category }
      else
        format.html { render :new }
        format.json { render json: @category.errors, status: :unprocessable_entity }
      end
    end
  end

  # 

  # PATCH/PUT /categories/1
  # PATCH/PUT /categories/1.json
  def update

   @must_have = params[:category][:partners]
   @category.partners = @must_have.join(",") if @must_have

    respond_to do |format|
      if @category.update(category_params)
        format.html { redirect_to '/categories', notice: 'Category was successfully updated.' }
        format.json { render :show, status: :ok, location: @category }
      else
        format.html { render :edit }
        format.json { render json: @category.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /categories/1
  # DELETE /categories/1.json
  def destroy
    	@category.destroy_sub
	
    respond_to do |format|
      format.html { redirect_to categories_url, notice: 'Category was successfully destroyed.' }
      format.json { head :no_content }
      format.html { redirect_to @categor, notice: 'Category was successfully created.' }
        format.json { render :show, status: :ok, location: @categor }
    end
    
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_category
      @category = Category.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def category_params
      params.require(:category).permit(:title, :sub_category, :super_category, :descritpion, :partners, :support_goods)
      
    end

    
end
